{"swagger":"2.0","info":{"version":"v1","title":"Visitor Registration"},"basePath":"/VisiREGServer-web/rest/v1","tags":[{"name":"users"},{"name":"externalcompanies"},{"name":"oauth"},{"name":"visitors"},{"name":"sites"},{"name":"test"},{"name":"management"},{"name":"terminals"},{"name":"employees"},{"name":"api"},{"name":"sms"},{"name":"statistics"},{"name":"webaccess"},{"name":"companies"},{"name":"visits"},{"name":"mail"}],"schemes":["http"],"paths":{"/api/new/{companyName}":{"get":{"tags":["api"],"summary":"Get OTP (APIKey) for a new Company","description":"Creates new OTP for new Company, this is used for initial terminal wizard setup!","operationId":"getApiKeyForCompany","produces":["application/json"],"parameters":[{"name":"companyName","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/APIKey"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/companies/all":{"get":{"tags":["companies"],"summary":"Get all companies","description":"Gets all companies that are known. Send this. The resulting companyies will be returned in JSON format.","operationId":"getAllCompanies","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/CompanyJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/companies/api/{id}":{"get":{"tags":["companies"],"summary":"Get API for a Company","description":"Create a JSON object resembling the Company you wish to update. Send this JSON to the endpoint. A JSON-object containing a 'success'-boolean will be returned.","operationId":"getApiKeyForCompany","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"string"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/companies/name/{name}":{"get":{"tags":["companies"],"summary":"Get a company by Name","description":"Add the name of the company you wish to get as path parameter to the request. Send this JSON to the endpoint. The resulting Company will be returned in JSON format.","operationId":"getCompanyByName","produces":["application/json"],"parameters":[{"name":"name","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/CompanyJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/companies/{id}":{"get":{"tags":["companies"],"summary":"Get a company by ID","description":"Add the ID of the company you wish to get as path parameter to the request. Send this JSON to the endpoint. The resulting Company will be returned in JSON format.","operationId":"getCompanyByID","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/CompanyJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"post":{"tags":["companies"],"summary":"Create a company","description":"Create a JSON object resembling the Company you wish to add. Send this JSON to the endpoint. The external ID will be a 'onetime' ext ID upon setup.After setup completion, a company specific external id will be provided. A JSON object containing a 'success'-boolean will be returned with an id of the Company, if the operation succeeded.\nThis request can only be executed by the root company.\")","operationId":"createCompany","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/CompanyJSON"}},{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/CompanyJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"put":{"tags":["companies"],"summary":"Update a company","description":"Create a JSON object resembling the Company you wish to update. Send this JSON to the endpoint. A JSON-object containing a 'success'-boolean will be returned.","operationId":"updateCompany","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/CompanyJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/CompanyJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"delete":{"tags":["companies"],"summary":"Remove a company","description":"Add the ID of the company you wish to delete as path parameter to the request. Send this JSON to the endpoint. A JSON-object containing a 'success'-boolean will be returned.\nThis request can only be executed by the root company.","operationId":"removeCompany","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/CompanyJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/employees/all/{id}":{"get":{"tags":["employees"],"summary":"Get all Hosts per company","description":"Gets all Hosts per company.","operationId":"getAllHostsPerCompany","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/employees/{compExtId}/{firstName}/{lastName}":{"get":{"tags":["employees"],"summary":"Find a host by first and last name.","description":"Find a host by first and last name.","operationId":"getHostByName","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"firstName","in":"path","required":true,"type":"string"},{"name":"lastName","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/EmployeeJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/employees/{id}":{"get":{"tags":["employees"],"summary":"Get a Host by ID","description":"Add the ID of the Host you wish to get as path parameter to the request. Send this JSON to the endpoint. The resulting Host will be returned in JSON format.","operationId":"getHostByID","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/EmployeeJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"post":{"tags":["employees"],"summary":"Create a Host","description":"Create a JSON object resembling the Host you wish to add. Send this JSON to the endpoint. A JSON object containing a 'success'-boolean will be returned with an id of the Host, if the operation succeeded.","operationId":"createEmployee","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/EmployeeJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/EmployeeJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"put":{"tags":["employees"],"summary":"Update an employee","description":"Create a JSON object resembling the Host you wish to update. Send this JSON to the endpoint. A JSON-object containing a 'success'-boolean will be returned.","operationId":"updateEmployee","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/EmployeeJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/EmployeeJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"delete":{"tags":["employees"],"summary":"Remove a Host","description":"Add the ID of the Host you wish to delete as path parameter to the request. Send this JSON to the endpoint. A JSON-object containing a 'success'-boolean will be returned.","operationId":"removeHost","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/EmployeeJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/externalcompanies/all/{id}":{"get":{"tags":["externalcompanies"],"operationId":"findAll","parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ExternalCompanyJSON"}},"headers":{}}}}},"/externalcompanies/count/visits/{compExtId}/{extCompExtId}":{"get":{"tags":["externalcompanies"],"operationId":"countVisitsForVisitor","parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"extCompExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"integer","format":"int32"},"headers":{}}}}},"/externalcompanies/hist/visits/{compExtId}/{extCompExtId}/{visitorExtId}":{"get":{"tags":["externalcompanies"],"operationId":"getVisitHistoryExclActualVisitor","parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"extCompExtId","in":"path","required":true,"type":"string"},{"name":"visitorExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/VisitHistoryRecordJSON"}},"headers":{}}}}},"/externalcompanies/{id}":{"get":{"tags":["externalcompanies"],"summary":"Get a company by ID","description":"Add the ID of the company you wish to get as path parameter to the request. Send this JSON to the endpoint. The resulting Company will be returned in JSON format.","operationId":"getCompanyByID","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/CompanyJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"post":{"tags":["externalcompanies"],"summary":"Create an externalCompany","description":"Create a JSON object resembling the Company you wish to add. Send this JSON to the endpoint. A JSON object containing a 'success'-boolean will be returned with an id of the Company, if the operation succeeded.\nThis request can only be executed by the root company.\")","operationId":"create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/ExternalCompanyJSON"}},{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/ExternalCompanyJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/mail/send":{"post":{"tags":["mail"],"summary":"Service to send email","description":"Send an email, based on given from/to address, subject and content","operationId":"sendMail","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/Email"}}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"boolean"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/mail/send/checkin/{visitExtId}/{visitorExtId}":{"get":{"tags":["mail"],"summary":"Service to send checkin formatted email to the visited host","description":"Send an checkin preformatted visireg mail to the host","operationId":"sendCheckInMail","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"visitExtId","in":"path","required":true,"type":"string"},{"name":"visitorExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"boolean"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/mail/send/checkout/{visitExtId}/{visitorExtId}":{"get":{"tags":["mail"],"summary":"Service to send checkout formatted email to the visited host","description":"Send an checkin preformatted visireg mail to the host","operationId":"sendCheckOutMail","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"visitExtId","in":"path","required":true,"type":"string"},{"name":"visitorExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"boolean"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/management/{id}":{"get":{"tags":["management"],"summary":"Get a company APIKey","description":"Add the company ID as a path parameter to the request in order to get the APIKey.\nThis request can only be executed by the root company.\")","operationId":"fetchCompanyAPIKey","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"boolean"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/oauth/verify/{vcode}":{"post":{"tags":["oauth"],"summary":"Verify the authorization code received from LinkedIn","description":"Verify the authorization code received from LinkedIn, the body must contain the original URI","operationId":"getProfile","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"vcode","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/oauth/{env}":{"get":{"tags":["oauth"],"summary":"Retrieve OAuth URI for LinkedIn","description":"Use the url to authenticate towards LinkedIn.","operationId":"retrieveOAuthURI","produces":["application/json"],"parameters":[{"name":"env","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/sites/all/{id}":{"get":{"tags":["sites"],"summary":"Get all sites per company","description":"Gets all the sites per company.","operationId":"getAllSitesPerCompany","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/sites/for/terminal/{id}":{"get":{"tags":["sites"],"summary":"Get site external id for given terminal ext id","description":"Returns the external id for a site, based on the given terminal external id. Emtpy string if no site has been found.","operationId":"getSiteExtIdForTerminal","produces":["text/plain"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"string"}}}}},"/sites/{id}":{"get":{"tags":["sites"],"summary":"Get a Site by ID","description":"Add the ID of the Site you wish to get as path parameter to the request. Send this JSON to the endpoint. The resulting Site will be returned in JSON format.","operationId":"getSiteByID","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/SiteJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"post":{"tags":["sites"],"summary":"Create a Site","description":"Create a JSON object resembling the Site you wish to add. The methos will verify if the site name propertyalready exits for company identified by its external id. Send this JSON to the endpoint. A JSON object containing a 'success'-boolean will be returned with an id of the Site, if the operation succeeded.","operationId":"createSite","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/SiteJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/SiteJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"put":{"tags":["sites"],"summary":"Update a Site","description":"Create a JSON object resembling the Site you wish to update. Send this JSON to the endpoint. A JSON-object containing a 'success'-boolean will be returned.","operationId":"updateSite","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/SiteJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/SiteJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"delete":{"tags":["sites"],"summary":"Remove a Site","description":"Add the ID of the Site you wish to delete as path parameter to the request. Send this JSON to the endpoint. A JSON-object containing a 'success'-boolean will be returned.","operationId":"removeSite","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/SiteJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/sites/{id}/{name}":{"get":{"tags":["sites"],"summary":"Get a Site by property siteName and company external Id","description":"Add the name of the Site you wish to get as path parameter to the request aswell as the company external id. Send this JSON to the endpoint. The resulting Site will be returned in JSON format.","operationId":"getSiteByNameAndCompanyId","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"name","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/SiteJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/sms/{compExtId}/{gsmNr}":{"post":{"tags":["sms"],"summary":"Send a SMS with given content to a given cell phone number","description":"Provide a text message and a given, existing, cell phone number, and send the sms! One way communication.","operationId":"sendSMS","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"type":"string"}},{"name":"gsmNr","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"string"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/statistics/comm/counters/{compExtid}":{"get":{"tags":["statistics"],"summary":"Get company statistics counters (mail, sms)","description":"Returns the company counters for mail and sms sent, starting from last reset.","operationId":"getCompanyCommCounters","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"string"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/statistics/stats/{extid}":{"get":{"tags":["statistics"],"summary":"Returns statistic information for a given company.","description":"Returns a list of pre-defined statistics, for a given company.","operationId":"getStatsForCompany","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"extid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitStats"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/statistics/visitors/today/checkin/{compExtId}":{"get":{"tags":["statistics"],"operationId":"getActualCheckedInVisitors","parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"integer","format":"int32"},"headers":{}}}}},"/statistics/visitors/total/{compExtId}":{"get":{"tags":["statistics"],"summary":"Retrieve total amount of visitors","description":"All distinct visitors in the db will be count and returned","operationId":"getTotalVisitorsPerMonth","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Total amount of visitors for given company.","schema":{"type":"integer","format":"int32"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/statistics/visits/total/today/{compExtId}":{"get":{"tags":["statistics"],"summary":"Retrieve total amount of visits for today","description":"Count all distinct visits for today","operationId":"getTotalVisitsToday","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Total amount of visits for today for given company.","schema":{"type":"integer","format":"int32"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/statistics/visits/total/{year}/{month}/{day}/{compExtId}":{"get":{"tags":["statistics"],"summary":"Retrieve total amount of visits for given date","description":"Count all distinct visits for given date","operationId":"getTotalVisitsToday","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"year","in":"path","required":true,"type":"string"},{"name":"month","in":"path","required":true,"type":"string"},{"name":"day","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Total amount of visits for given date for given company.","schema":{"type":"integer","format":"int32"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/terminals/all/{id}":{"get":{"tags":["terminals"],"summary":"Get all terminals per site","description":"Gets all terminals per site.","operationId":"getAllTerminalsPerSite","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/terminals/api/{id}":{"get":{"tags":["terminals"],"summary":"Get the API key for a terminal","description":"Add the external id of a terminal to this endpoint, and you'll receive the corresponding API key","operationId":"getTerminalAPIKey","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/SiteJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/terminals/config/update/{id}":{"post":{"tags":["terminals"],"summary":"Updates the terminal configuration","description":"For a given company (identified by its external id) and a given terminal (identified by its external id); the terminal configuration will be updated.","operationId":"updateTerminalConfiguration","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/AppConfigModel"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/AppConfigModel"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/terminals/config/{id}":{"get":{"tags":["terminals"],"summary":"Provides the terminal configuration","description":"For a given company (identified by its external id) and a given terminal (identified by its external id); the terminal configuration will be provided.","operationId":"getTerminalConfiguration","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/AppConfigModel"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"post":{"tags":["terminals"],"summary":"Stores the terminal configuration","description":"For a given company (identified by its external id) and a given terminal (identified by its external id); the terminal configuration will be stored.Pre requisite: the terminal must exist before storing the config.","operationId":"storeTerminalConfiguration","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/AppConfigModel"}}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"boolean"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"delete":{"tags":["terminals"],"summary":"Deletes the terminal configuration","description":"For a given company (identified by its external id) and a given terminal (identified by its external id); the terminal configuration will be deleted.","operationId":"deleteTerminalConfiguration","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/AppConfigModel"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/terminals/{id}":{"get":{"tags":["terminals"],"summary":"Get a Terminal by ID","description":"Add the ID of the Terminal you wish to get as path parameter to the request. Send this JSON to the endpoint. The resulting Terminal will be returned in JSON format.","operationId":"getTerminalByID","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/TerminalJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"post":{"tags":["terminals"],"summary":"Create a terminal","description":"Create a JSON object resembling the Terminal you wish to add, a check will be performed in order to verify that the terminal name does not exist in the scope of the given site. Send this JSON to the endpoint. A JSON object containing a 'success'-boolean will be returned with an id of the Terminal, if the operation succeeded.","operationId":"createTerminal","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/TerminalJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/TerminalJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"put":{"tags":["terminals"],"summary":"Update a Terminal","description":"Create a JSON object resembling the Terminal you wish to update, a check will be performed in order to verify that the terminal name does not exist already in the scope of the terminal it is attached to.. Send this JSON to the endpoint. A JSON-object containing a 'success'-boolean will be returned.","operationId":"updateTerminal","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/TerminalJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/TerminalJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"delete":{"tags":["terminals"],"summary":"Remove a Terminal","description":"Add the ID of the Terminal you wish to delete as path parameter to the request. Send this JSON to the endpoint. A JSON-object containing a 'success'-boolean will be returned.","operationId":"removeTerminal","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/TerminalJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/terminals/{id}/{name}":{"get":{"tags":["terminals"],"summary":"Get a Site by property siteName and company external Id","description":"Add the name of the Site you wish to get as path parameter to the request aswell as the company external id. Send this JSON to the endpoint. The resulting Site will be returned in JSON format.","operationId":"getTerminalByNameAndSiteExtId","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"name","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/SiteJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/test":{"get":{"tags":["test"],"summary":"Test the connection","description":"Calling this endpoint will return a version number. It can be used to verify if a correct VisiREG-server URL was used.","operationId":"testConnection","produces":["text/plain"],"parameters":[],"responses":{"200":{"description":"Result of the request.","schema":{"type":"string"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/users":{"post":{"tags":["users"],"summary":"Create a User","description":"Create a JSON object resembling the User you wish to add. Send this JSON to the endpoint. A JSON object containing a 'success'-boolean will be returned with an id of the User, if the operation succeeded.","operationId":"createUser","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/UserJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitOutput"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/users/all":{"get":{"tags":["users"],"summary":"Returns all users","description":"Returns all users registered for this system.","operationId":"getAllUsers","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitOutput"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/users/id/{id}":{"get":{"tags":["users"],"summary":"Find a user by user external Id","description":"Finds a user based on its registered external id.","operationId":"findUserByExtId","consumes":["application/json"],"produces":["applciaitons/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitOutput"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/users/login/{username}/{enc_password}":{"get":{"tags":["users"],"summary":"Performs a user login","description":"Performs a user login, based on its given username and password.","operationId":"loginUser","produces":["application/json"],"parameters":[{"name":"username","in":"path","required":true,"type":"string"},{"name":"enc_password","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitOutput"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/users/name/{name}":{"get":{"tags":["users"],"summary":"Find a user by user name","description":"Finds a user based on its registered username.","operationId":"findUserByName","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"name","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitOutput"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/users/roles/{id}":{"get":{"tags":["users"],"summary":"Returns all roles applying for given user with user ext id","description":"Returns a list of roles that are applicable for the given user.","operationId":"getRolesForUser","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitOutput"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/users/{id}":{"put":{"tags":["users"],"summary":"Updates a registered user","description":"Updates a user based on its external ID.","operationId":"updateUser","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/UserJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitOutput"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}},"delete":{"tags":["users"],"summary":"Delete a registered user","description":"Deletes a user based on its external ID.","operationId":"deleteUser","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitOutput"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/all/today/{extid}":{"get":{"tags":["visitors"],"summary":"Get all visits registered for today.","description":"Returns a visitreport who contains all visit information for visitors registered today.","operationId":"getTodaysVisits","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"extid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitorReportCollection"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/all/{externalCompanyID}":{"get":{"tags":["visitors"],"summary":"Get all terminals per site","description":"Gets all terminals per site.","operationId":"getAllVisitorsByExternalCompanyID","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"externalCompanyID","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/comp/{compExtId}/extcomp/{extCompExtId}":{"post":{"tags":["visitors"],"summary":"Create a visitor","description":"Create a JSON object resembling the Visitor you wish to add. Send this JSON to the endpoint. A JSON object containing a 'success'-boolean will be returned with an id of the Visitor, if the operation succeeded.","operationId":"createVisitor","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"extCompExtId","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/VisitorJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitorJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/count/visits/{compExtId}/{visitorExtId}":{"get":{"tags":["visitors"],"summary":"Count all Visits for a given Visitor (using the visitor_external_id)","description":"Returns the amount of registered visits for a given visitor.","operationId":"countVisitsForVisitor","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"visitorExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/email/{compExtId}/{address}":{"get":{"tags":["visitors"],"summary":"Get a visitor by unqiue email address","description":"Will only return a visitor if a unique email address is found - this must be the case because email addresses are unique in the VisiREG graph","operationId":"getVisitorByEmailAddress","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"address","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/TerminalJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/guests/visit/{compExtId}/{visitExtId}/{visitorExtId}":{"get":{"tags":["visitors"],"summary":"Returns all visitors, who have been registered for the same host, at the same time","description":"Returns a list of co-visitors, visiting the same host at the same time.","operationId":"getVisitorsForSameVisit","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"visitExtId","in":"path","required":true,"type":"string"},{"name":"visitorExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/hist/visits/{compExtId}/{visitorExtId}":{"get":{"tags":["visitors"],"summary":"Get the visit history for a given visitor","description":"Returns a list of visits, registerd in the past, for a given visitor.","operationId":"getVisitHistoryForVisitor","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"visitorExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/id/{id}":{"get":{"tags":["visitors"],"summary":"Get a Terminal by ID","description":"Add the ID of the Terminal you wish to get as path parameter to the request. Send this JSON to the endpoint. The resulting Terminal will be returned in JSON format.","operationId":"getVisitorById","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/TerminalJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/merge/{externalCompanyID}":{"post":{"tags":["visitors"],"summary":"Merge a visitor","description":"Create a JSON object resembling the Visitor you wish to merge with an existing Visitor. Send this JSON to the endpoint. A JSON object containing a 'success'-boolean will be returned with an id of the Visitor, if the operation succeeded.","operationId":"mergeVisitor","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"externalCompanyID","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/VisitorJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitorJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/phone/{compExtId}/{nr}":{"get":{"tags":["visitors"],"summary":"Get a visitor by phone number.","description":"Will only return a visitor if a unique node is found - this must be the case because Phone numbers must be unique in the VisiREG graph","operationId":"getVisitorByPhoneNumber","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"nr","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/TerminalJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/report/{compExtId}/{from}/{to}/{skip}/{collectionSize}/{searchField}/{searchValue}":{"get":{"tags":["visitors"],"summary":"Get visitor report between [fromDate, toDate].","description":"Returns a visitor report for a date interval (date format must be: YYYY-MM-DD). Optional: 'skip' and 'collectionSize' when set on '0'.","operationId":"getVisitorReportInterval","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"from","in":"path","required":true,"type":"string"},{"name":"to","in":"path","required":true,"type":"string"},{"name":"skip","in":"path","required":true,"type":"string"},{"name":"collectionSize","in":"path","required":true,"type":"string"},{"name":"searchField","in":"path","required":true,"type":"string"},{"name":"searchValue","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitorReportCollection"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/report/{visitExtId}":{"get":{"tags":["visitors"],"summary":"Get visitor report. (only visitExtId available)","description":"Returns a visitor report for a given visit.","operationId":"getVisitorReportByVisitor","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"visitExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitorReport"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/scnumber/{compExtId}/{nr}":{"get":{"tags":["visitors"],"summary":"Get a visitor by hashed + salted social security number","description":"Will only return a visitor if a unique node is found - this must be the case because SC number is unique in the VisiREG graph","operationId":"getVisitorByHashedSCNumber","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"nr","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/TerminalJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visitors/{id}":{"put":{"tags":["visitors"],"summary":"Update a Visitor","description":"Create a JSON object resembling the Visitor you wish to update. Send this JSON to the endpoint. A JSON-object containing a 'success'-boolean will be returned.","operationId":"updateVisitor","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/VisitorJSON"}}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/TerminalJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visits/checkout/manual/{visitExtId}/{visitorExtId}/{checkoutReason}":{"post":{"tags":["visits"],"summary":"Perfoms a manual checkout for a visitor.","description":"Performs a manual checkout for a visitor, a checkout reason must be provided and an additional property 'manual' will be persisted to keep track.","operationId":"checkoutVisit","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"visitExtId","in":"path","required":true,"type":"string"},{"name":"visitorExtId","in":"path","required":true,"type":"string"},{"name":"checkoutReason","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visits/checkout/{compExtId}/{termExtId}/{visitExtId}/{visitorExtId}":{"post":{"tags":["visits"],"summary":"Perfoms a checkout for a visitor.","description":"Performs a checkout for a visitor, if a visitor has multiple visits with CHECKIN state, they will all be checked-out","operationId":"checkoutVisit","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"compExtId","in":"path","required":true,"type":"string"},{"name":"termExtId","in":"path","required":true,"type":"string"},{"name":"visitExtId","in":"path","required":true,"type":"string"},{"name":"visitorExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visits/couple/visit/{visitExtId}/visitor/{visitorExtId}/badge/{atr}":{"get":{"tags":["visits"],"summary":"Couple badge.","description":"Couples a badge with given atr to a given visit and visitor.","operationId":"coupleBadge","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"visitExtId","in":"path","required":true,"type":"string"},{"name":"visitorExtId","in":"path","required":true,"type":"string"},{"name":"atr","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"array","items":{"type":"object"}}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/visits/register/{extid}":{"post":{"tags":["visits"],"summary":"Register a new Visit","description":"Create a JSON object resembling the Visit you wish to add. Send this JSON to the endpoint. A JSON object containing a 'success'-boolean will be returned with an id of the Visitor, if the operation succeeded.","operationId":"registerVisit","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/VisitJSON"}},{"name":"extid","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/VisitorJSON"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/webaccess/accounts/{termExtId}":{"get":{"tags":["webaccess"],"summary":"Web Access accounts","description":"Provide a text message and a given, existing, cell phone number, and send the sms! One way communication.","operationId":"getWebAccounts","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"termExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"$ref":"#/definitions/InternetAccessResource"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}},"/webaccess/terminal/{termExtId}/new":{"post":{"tags":["webaccess"],"summary":"Create new web access account","description":"Creates a new web access account that visitors can use to login on your network (internet credentials).","operationId":"createWebAccess","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/InternetAccess"}},{"name":"termExtId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Result of the request.","schema":{"type":"boolean"}},"412":{"description":"JSON validation failed, a property is missing!"},"415":{"description":"Unsupported mediatype, add HTTP header: 'Content-Type = application/json' to the request"}}}}},"definitions":{"UserJSON":{"type":"object","properties":{"userName":{"type":"string"},"password":{"type":"string"},"success":{"type":"boolean","default":false},"errorCode":{"type":"string"}}},"VisitHistoryRecordJSON":{"type":"object","properties":{"meetingDate":{"type":"string"},"meetinTime":{"type":"string"},"employee":{"$ref":"#/definitions/Employee"},"visitor":{"$ref":"#/definitions/Visitor"}}},"Email":{"type":"object","properties":{"from":{"type":"string"},"to":{"type":"string"},"subject":{"type":"string"},"message":{"type":"string"}}},"Visitor":{"type":"object","properties":{"name":{"type":"string"},"firstName":{"type":"string"},"mail":{"type":"string"},"phone":{"type":"string"},"externalID":{"type":"string"},"scNumber":{"type":"string"},"carLicense":{"type":"string"},"function":{"type":"string"},"base64picture":{"type":"string"},"comment":{"type":"string"},"neo4JProperties":{"type":"string"}}},"VisitorJSON":{"type":"object","properties":{"externalID":{"type":"string"},"name":{"type":"string"},"firstName":{"type":"string"},"mail":{"type":"string"},"phone":{"type":"string"},"base64encodedPhoto":{"type":"string"},"carLicense":{"type":"string"},"comment":{"type":"string"},"function":{"type":"string"},"scnumber":{"type":"string"},"externalCompany":{"$ref":"#/definitions/ExternalCompanyJSON"},"success":{"type":"boolean","default":false},"errorCode":{"type":"string"}}},"TerminalJSON":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"state":{"type":"string"},"externalID":{"type":"string"},"success":{"type":"boolean","default":false},"errorCode":{"type":"string"},"apiKey":{"type":"string"}}},"VisitJSON":{"type":"object","properties":{"subject":{"type":"string"},"extField1":{"type":"string"},"extField2":{"type":"string"},"extField3":{"type":"string"},"externalID":{"type":"string"},"meetingTime":{"type":"string"},"meetingDate":{"type":"string"},"checkin":{"type":"string"},"checkout":{"type":"string"},"checkInStatus":{"type":"string"},"checkinTerminal":{"type":"string"},"checkoutTerminal":{"type":"string"},"externalCompanyName":{"type":"string"},"pacBadgeATR":{"type":"string"},"hostFirstName":{"type":"string"},"hostName":{"type":"string"},"visitorFirstName":{"type":"string"},"visitorName":{"type":"string"},"regMethod":{"type":"string","enum":["BE_EID","FORM_FILL","LINKEDIN","GSM"]},"visitorIDs":{"type":"array","items":{"type":"string"}},"hostIDs":{"type":"array","items":{"type":"string"}},"terminalID":{"type":"string"},"success":{"type":"boolean","default":false},"errorCode":{"type":"string"},"base64encodedQR":{"type":"string"},"base64encodedBC":{"type":"string"}}},"SocialWebProfile":{"type":"object","properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"function":{"type":"string"},"pictureURI":{"type":"string"},"industry":{"type":"string"},"emailAddress":{"type":"string"},"companyAndFunction":{"type":"object","additionalProperties":{"type":"string"}}}},"APIKey":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"externalID":{"type":"string"},"type":{"type":"string"},"apiKey":{"type":"string"},"tempName":{"type":"string"}}},"CompanyJSON":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"website":{"type":"string"},"photoBase64Encoded":{"type":"string"},"phone":{"type":"string"},"externalID":{"type":"string"},"extField1":{"type":"string"},"extField2":{"type":"string"},"extField3":{"type":"string"},"success":{"type":"boolean","default":false},"errorCode":{"type":"string"},"apiKey":{"type":"string"},"base64encodedPhoto":{"type":"string"}}},"InternetAccess":{"type":"object","properties":{"ssid":{"type":"string"},"login":{"type":"string"},"password":{"type":"string"}}},"InternetAccessResource":{"type":"object"},"Employee":{"type":"object","properties":{"name":{"type":"string"},"firstName":{"type":"string"},"mail":{"type":"string"},"phone":{"type":"string"},"locale":{"type":"string"},"externalID":{"type":"string"},"neo4JProperties":{"type":"string"}}},"EmployeeJSON":{"type":"object","properties":{"name":{"type":"string"},"firstName":{"type":"string"},"mail":{"type":"string"},"phone":{"type":"string"},"locale":{"type":"string"},"externalID":{"type":"string"},"success":{"type":"boolean","default":false},"errorCode":{"type":"string"}}},"AppConfigModel":{"type":"object","properties":{"termExtID":{"type":"string"},"compExtID":{"type":"string"},"siteExtID":{"type":"string"},"runWizard":{"type":"boolean","default":false},"multiComp":{"type":"boolean","default":false},"sendSMS":{"type":"boolean","default":false},"sendMail":{"type":"boolean","default":false},"defaultLanguage":{"type":"string"},"installationType":{"type":"string"},"width":{"type":"number","format":"double"},"height":{"type":"number","format":"double"},"baseURL":{"type":"string"},"appMode":{"type":"string"},"companyAPIKey":{"type":"string"},"terminalAPIKey":{"type":"string"},"ticketPrinter":{"type":"string"},"pacActive":{"type":"boolean","default":false},"histUser":{"type":"boolean","default":false},"histExtComp":{"type":"boolean","default":false},"timerActive":{"type":"boolean","default":false},"qrValidationURI":{"type":"string"}}},"VisitStats":{"type":"object","properties":{"totalVisitsAll":{"type":"integer","format":"int32"},"totalVisitsThisYear":{"type":"integer","format":"int32"},"totalVisitsThisMonth":{"type":"integer","format":"int32"},"totalVisitsThisWeek":{"type":"integer","format":"int32"},"totalVisitsToday":{"type":"integer","format":"int32"},"totalCheckInToday":{"type":"integer","format":"int32"},"totalCheckOutToday":{"type":"integer","format":"int32"},"totalVisitorsAll":{"type":"integer","format":"int32"},"returningVisitorFrequency":{"type":"integer","format":"int32"},"visitingCompanies":{"type":"integer","format":"int32"},"employeeCoverage":{"type":"integer","format":"int32"},"visitDayRate":{"type":"integer","format":"int32"},"amountEIDRegistrations":{"type":"integer","format":"int32"},"amountLinkedInRegistrations":{"type":"integer","format":"int32"},"amountGSMRegistrations":{"type":"integer","format":"int32"},"amountFormFillRegistrations":{"type":"integer","format":"int32"},"smsSent":{"type":"integer","format":"int64"},"mailSent":{"type":"integer","format":"int64"},"todayCheckIns":{"type":"array","items":{"type":"integer","format":"int32"}},"todayCheckOuts":{"type":"array","items":{"type":"integer","format":"int32"}},"lastWeekCheckIns":{"type":"array","items":{"type":"integer","format":"int32"}},"lastWeekCheckOuts":{"type":"array","items":{"type":"integer","format":"int32"}},"lastWeekManualCheckouts":{"type":"array","items":{"type":"integer","format":"int32"}},"lastWeekVisits":{"type":"array","items":{"type":"integer","format":"int32"}},"lastMonthVisits":{"type":"array","items":{"type":"integer","format":"int32"}}}},"VisitOutput":{"type":"object"},"ExternalCompanyJSON":{"type":"object","properties":{"name":{"type":"string"},"externalID":{"type":"string"},"function":{"type":"string"},"success":{"type":"boolean","default":false},"errorCode":{"type":"string"}}},"VisitorReportCollection":{"type":"object","properties":{"visitorMap":{"type":"object","additionalProperties":{"$ref":"#/definitions/VisitorReport"}}}},"VisitorReport":{"type":"object","properties":{"externalID":{"type":"string"},"name":{"type":"string"},"firstName":{"type":"string"},"mail":{"type":"string"},"phone":{"type":"string"},"base64encodedPhoto":{"type":"string"},"carLicense":{"type":"string"},"comment":{"type":"string"},"function":{"type":"string"},"scnumber":{"type":"string"},"externalCompany":{"$ref":"#/definitions/ExternalCompanyJSON"},"success":{"type":"boolean","default":false},"errorCode":{"type":"string"},"checkin":{"type":"string"},"checkout":{"type":"string"},"checkInStatus":{"type":"string"},"checkinTerminal":{"type":"string"},"checkoutTerminal":{"type":"string"},"externalCompanyName":{"type":"string"},"hostFirstName":{"type":"string"},"hostName":{"type":"string"},"meetingTime":{"type":"string"},"hostMail":{"type":"string"},"hostPhone":{"type":"string"},"pacBadgeATR":{"type":"string"}}},"SiteJSON":{"type":"object","properties":{"externalID":{"type":"string"},"name":{"type":"string"},"street":{"type":"string"},"number":{"type":"string"},"zip":{"type":"string"},"city":{"type":"string"},"country":{"type":"string"},"success":{"type":"boolean","default":false},"errorCode":{"type":"string"}}},"ManagementOutput":{"type":"object"},"CompanyStats":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"compExtId":{"type":"string"},"smsCounter":{"type":"integer","format":"int64"},"mailCounter":{"type":"integer","format":"int64"}}}},"externalDocs":{"description":"Find out more about Swagger","url":"http://swagger.io"}}